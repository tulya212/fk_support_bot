
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from flask import Flask
import threading
import os

API_TOKEN = '7177666983:AAGP2uAg62Tr33Ej0CU5ge4Wx_DMohll-xg'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# ‚îÄ‚îÄ‚îÄ –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–π–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ ‚îÄ‚îÄ‚îÄ
allowed_serials = {
    "0010258608", "0010289689", "0010289069", "0010289073",
    "0010289071", "0010289697", "0010289699", "0010289310",
    "0010289690", "0010289070", "0010276287", "0010289230",
    "0010294124", "0010299304", "0010299303", "0010299305",
    "0010299306", "0010271325", "0010289062", "0010289233",
    "0010294125", "0010289067", "0010289693", "0010280734",
    "0010311211", "0010299302", "0010299297", "0010299307",
    "0010308787", "0010299328", "0010298017", "0010298018",
    "0010298101", "0010298019", "0010298102", "0010298020",
    "0010298016", "0010304011", "0010301717", "0010302157",
    "0010301716", "0010302153", "0010302156", "0010302154",
    "0010301192", "0010301720", "0010299329", "0010299330",
    "0010302155", "0010299327", "DCEC 21BBTEECU90", "0010276286",
    "0010308785", "0010305788", "0010306890", "0010305791",
    "0010305892", "0010305790", "0010306889", "0010306887",
    "0010308786", "0010306892", "0010308789", "0010311210",
    "0010311510", "0010311511", "0010311507", "0010306879",
    "0010311509", "0010311508", "0010313377", "0010313378",
    "0010311669", "0010289067", "0010289693", "10280734",
    "0010289071", "0010289697", "0010289699", "0010271325",
    "0010289062", "2024416002", "0010299302", "0010313904",
    "0010314805", "0010317827", "0010317828", "2411129852",
    "2411129856", "2411129848", "2411129845", "2411129850",
    "2411129855", "2411129842", "2411129851", "2411129841",
    "2411129837", "2411129847", "2411129838", "2411129857",
    "2411129853", "2411129859", "2411129846", "2411129839",
    "2411129858", "2411129844", "2411129860", "2411129861",
    "2411129854", "2411129849", "2411129843", "2411129840",
    "2402100642", "2402100618", "2410124638", "2410124599",
    "2410124590", "2410124595", "2410124587", "2503148242",
    "2503148230", "2503148239", "2503148217", "2503148219",
    "2503148237", "2503148226", "2503148228", "2503148227",
    "2503148218", "2503148234", "2503148235", "2503148238",
    "2503148216", "2412132984", "2412132780", "2412132847",
    "2412132983", "2412132947", "2412132875", "2412132981"
}
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

verified_users = set()

# ‚Äî‚Äî‚Äî –ú–µ–Ω—é ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
main_menu = ReplyKeyboardMarkup(resize_keyboard=True).add("‚òï –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –∫–æ—Ñ–µ–º–∞—à–∏–Ω—ã")
model_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(
    "Azkoyen Vitro S1", "Azkoyen Vitro S5",
    "Jetinno JL22", "Jetinno JL24", "Jetinno JL300"
)
action_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(
    "üìõ –£ –º–µ–Ω—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å!", "üìò –û–±—É—á–µ–Ω–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
).add("‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?")
problem_menu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
    "üß† –Ø –∑–Ω–∞—é –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏", "üßØ –ü—Ä–æ–ª–∏–≤ –∏–ª–∏ –ø—Ä–æ—Ç–µ—á–∫–∞", "üîå –ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è",
    "üíß NO WATER / –Ω–µ—Ç –≤–æ–¥—ã", "üóë –°–ª–∏–≤ –æ—Ç—Ö–æ–¥–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
    "üîß –ó–∞–≤–∞—Ä–æ—á–Ω—ã–π –±–ª–æ–∫ (F.ESPRSS.UNT.POS)"
)

# ‚Äî‚Äî‚Äî Handlers ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    await message.answer("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! ‚úÖ")
    if message.from_user.id not in verified_users:
        await message.answer("üëã –í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–æ—Ñ–µ–º–∞—à–∏–Ω—ã:")
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu)

@dp.message_handler(lambda m: m.from_user.id not in verified_users)
async def verify_serial(message: types.Message):
    if message.text.strip() in allowed_serials:
        verified_users.add(message.from_user.id)
        await message.answer("‚úÖ –ù–æ–º–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.", reply_markup=main_menu)
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:")

@dp.message_handler(lambda m: m.text == "‚òï –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –∫–æ—Ñ–µ–º–∞—à–∏–Ω—ã")
async def choose_model(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:", reply_markup=model_menu)

@dp.message_handler(lambda m: m.text.startswith(("Azkoyen", "Jetinno")))
async def model_selected(message: types.Message):
    text = (
        "‚ÑπÔ∏è –í–ê–ñ–ù–û\n\n"
        "–ù–∞ —ç–∫—Ä–∞–Ω–µ Azkoyen –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∞.\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–≤–µ—Ä—å –∏ –Ω–∞–∂–º–∏—Ç–µ PROG/C, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø—Ä–∞–≤–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.\n\n"
        "–ï—Å–ª–∏ –Ω–µ—Ç –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ ‚Äî –æ—à–∏–±–æ–∫ –Ω–µ—Ç. –ò–Ω–∞—á–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ."
    ) if "Azkoyen" in message.text else (
        "‚ÑπÔ∏è –í–ê–ñ–ù–û\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ª–æ–≥–æ—Ç–∏–ø Fastkava –≤ —É–≥–ª—É, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å.\n"
        "–°–º–æ—Ç—Ä–∏—Ç–µ –∂—É—Ä–Ω–∞–ª –æ—à–∏–±–æ–∫ —Å–ø—Ä–∞–≤–∞."
    )
    await message.answer(text)
    await message.answer("–ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?", reply_markup=action_menu)

@dp.message_handler(lambda m: m.text == "üìõ –£ –º–µ–Ω—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å!")
async def problems_list(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:", reply_markup=problem_menu)

# ‚Äî‚Äî‚Äî –¢–æ—á–µ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—à–∏–±–∫–∞–º ‚Äî‚Äî‚Äî

@dp.message_handler(lambda m: "NO WATER" in m.text.upper())
as# ‚Ä¶ (–ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–µ–Ω—é) ‚Ä¶

# 1) F.ESPRSS.UNT.POS (–∏–Ω–æ–≥–¥–∞ –∫–∞–∫ G.ESPRESSO UNIT)
@dp.message_handler(lambda m: "F.ESPRSS.UNT.POS" in m.text.upper() or "G.ESPRESSO UNIT" in m.text.upper())
async def brew_unit_error(message: types.Message):
    await message.answer(
        "üß† *–û—à–∏–±–∫–∞:* F.ESPRSS.UNT.POS  \n"
        "_(–∏–Ω–æ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ G.ESPRESSO UNIT)_\n\n"

        "‚ùó *–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞:* –ó–∞–≤–∞—Ä–æ—á–Ω—ã–π –±–ª–æ–∫ –Ω–µ –≤ –Ω—É–∂–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏\n"
        "‚öôÔ∏è –ê–ø–ø–∞—Ä–∞—Ç –Ω–µ –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ü–∏–∫–ª –¥–≤–∏–∂–µ–Ω–∏—è –∑–∞–≤–∞—Ä–æ—á–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞.\n\n"

        "üîç *–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —ç—Ç–∞ –æ—à–∏–±–∫–∞:*\n"
        "‚Ä¢ –ó–∞–≤–∞—Ä–æ—á–Ω—ã–π –±–ª–æ–∫ ¬´–∑–∞—Å—Ç—Ä—è–ª¬ª –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏—è–º–∏ –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∏—Å—Ö–æ–¥–Ω—É—é  \n"
        "‚Ä¢ –ê–ø–ø–∞—Ä–∞—Ç –º–æ–≥ –Ω–∞—Å—ã–ø–∞—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ—Ñ–µ  \n"
        "‚Ä¢ –í–Ω—É—Ç—Ä–∏ –æ–±—Ä–∞–∑–æ–≤–∞–ª–∞—Å—å –ø–ª–æ—Ç–Ω–∞—è –∫–æ—Ñ–µ–π–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞\n\n"

        "üîß *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ:*\n"
        "1. üîÑ **–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç** (—á–∞—Å—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ä–∞–∑—É ‚Äî –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ¬´–≥—É–ª¬ª –∏ —â–µ–ª—á–æ–∫)\n"
        "2. üö™ **–û—Ç–∫—Ä–æ–π—Ç–µ –¥–≤–µ—Ä—Ü—É** –∏ —É–±–µ–¥–∏—Ç–µ—Å—å:\n"
        "   ‚Ä¢ –í—Å—ë —Å—Ç–æ–∏—Ç —Ä–æ–≤–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–ª–∏–Ω–∏–ª–æ  \n"
        "   ‚Ä¢ –§–ª–∞–∂–∫–∏-–∑–∞–º–æ—á–∫–∏ —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ –∏ —Å–Ω–∏–∑—É —Å–ª–µ–≤–∞ –ø–ª–æ—Ç–Ω–æ –∑–∞–∂–∞—Ç—ã\n"
        "3. üõ†Ô∏è **–†—É—á–Ω–∞—è —Ä–∞–∑–±–æ—Ä–∫–∞** (–µ—Å–ª–∏ –Ω–µ —É—Ö–æ–¥–∏—Ç):\n"
        "   a) –ù–∞–π–¥–∏—Ç–µ –ø–æ—Ä—à–µ–Ω—å (–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π —Ç—Ä—É–±–∫–æ–π)  \n"
        "   b) –°–Ω–∏–º–∏—Ç–µ –º–∏–∫—Å–µ—Ä (–±–µ–∂–µ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å –∫—Ä–∞—Å–Ω–æ–π —Ç—Ä—É–±–∫–æ–π)  \n"
        "   c) –û—Ç–∫—Ä–æ–π—Ç–µ –æ–±–∞ —Ñ–ª–∞–∂–∫–∞-–∑–∞–º–∫–∞ –∏ —Å–Ω–∏–º–∏—Ç–µ –±–ª–æ–∫  \n"
        "4. ü™• **–£–¥–∞–ª–∏—Ç–µ –∫–æ—Ñ–µ–π–Ω—É—é —Ç–∞–±–ª–µ—Ç–∫—É** (–∑—É–±–æ—á–∏—Å—Ç–∫–æ–π, –Ω–æ–∂–æ–º)  \n"
        "5. üßº **–ü—Ä–æ–º–æ–π—Ç–µ –∏ —Å–æ–±–µ—Ä–∏—Ç–µ**: –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –∑–∞–º–∫–∏, –∑–∞—â—ë–ª–∫–Ω–∏—Ç–µ –º–∏–∫—Å–µ—Ä  \n"
        "6. üîÑ **–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç**"
        , parse_mode="Markdown"
    )

# 2) NO WASTE BIN
@dp.message_handler(lambda m: "NO WASTE BIN" in m.text.upper())
async def no_waste_bin_error(message: types.Message):
    await message.answer(
        "‚ùó *–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞:* NO WASTE BIN  \n"
        "üóë –ê–≤—Ç–æ–º–∞—Ç –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –ª–æ—Ç–æ–∫ –¥–ª—è –æ—Ç—Ö–æ–¥–æ–≤.\n\n"

        "üîç *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ:*\n"
        "‚Ä¢ üì¶ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ª–æ—Ç–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–æ —É–ø–æ—Ä–∞ (—á–∞—Å—Ç–æ –∑–∞–±—ã–≤–∞—é—Ç –≤–µ—Ä–Ω—É—Ç—å –ø–æ—Å–ª–µ —á–∏—Å—Ç–∫–∏)  \n"
        "‚Ä¢ üîÑ –í—ã–Ω—å—Ç–µ –ª–æ—Ç–æ–∫ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ, –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–ª–æ—Ç–Ω–æ —Å—Ç–∞—Ç—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–º  \n"
        "‚Ä¢ üßπ –û—á–∏—Å—Ç–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –ø–ª–æ—â–∞–¥–∫—É –æ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤\n\n"

        "üîß *–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç ‚Äî —Å–±—Ä–æ—Å—å—Ç–µ —Å—á—ë—Ç—á–∏–∫ –æ—Ç—Ö–æ–¥–æ–≤:*\n"
        "1. –ù–∞–∂–º–∏—Ç–µ PROG/C ‚Üí A –¥–æ ¬´030 Test Machine¬ª  \n"
        "2. –ù–∞–∂–º–∏—Ç–µ A –∏ –ª–∏—Å—Ç–∞–π—Ç–µ –¥–æ –ø—É–Ω–∫—Ç–∞ 114 ‚Üí D  \n"
        "3. –õ–∏—Å—Ç–∞–π—Ç–µ –∫–Ω–æ–ø–∫–æ–π D, –ø–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è 5-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä 00123)  \n"
        "4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ D, –≤—ã—Ö–æ–¥–∏—Ç–µ –∫–Ω–æ–ø–∫–æ–π C  \n"
        "5. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç (2‚Äì3 —Ä–∞–∑–∞)"
        , parse_mode="Markdown"
    )

# 3) NO WATER
@dp.message_handler(lambda m: "NO WATER" in m.text.upper())
async def no_water_error(message: types.Message):
    await message.answer(
        "‚ùó *–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞:* NO WATER  \n"
        "üíß –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∞–≤—Ç–æ–º–∞—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–±—Ä–∞—Ç—å –≤–æ–¥—É.\n\n"

        "üîç *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ:*\n"
        "1. üì¶ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –∫–∞–Ω–∏—Å—Ç—Ä–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å –≤–æ–¥–∞  \n"
        "2. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –ø–µ—Ä–µ–∂–∞—Ç–∞ –ª–∏ —Å–∏–ª–∏–∫–æ–Ω–æ–≤–∞—è —Ç—Ä—É–±–∫–∞ –ø–æ–¥–∞—á–∏ –≤–æ–¥—ã\n"
        "   _(–Ω–∞–ø—Ä–∏–º–µ—Ä: –ø–æ–¥ –Ω–æ–∂–∫–æ–π –∞–ø–ø–∞—Ä–∞—Ç–∞ –∏–ª–∏ –≤ –º–µ–±–µ–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ä—Å—Ç–∏–∏)_  \n"
        "3. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ (–≤—ã–∫–ª—é—á–∏—Ç–µ –∏ –≤–∫–ª—é—á–∏—Ç–µ)\n"
        "   ‚Äî –ò–Ω–æ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã –Ω–∞—Å–æ—Å —Å–º–æ–≥ –ø–æ–¥—Ç—è–Ω—É—Ç—å –≤–æ–¥—É  \n"
        "   ‚Äî –í–∞–∂–Ω–æ: –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª—ã—à–Ω—ã –∑–≤—É–∫–∏ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –Ω–∞—Å–æ—Å–∞\n\n"

        "üì∑ –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–ª–∞—Å—å ‚Äî —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ —Ç—Ä—É–±–∫–∏ –∏ —ç–∫—Ä–∞–Ω–∞ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ."
        , parse_mode="Markdown"
    )

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

app = Flask(__name__)
@app.route("/")
def index():
    return "Bot is running!"

def run_flask():
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 10000)))

if __name__ == "__main__":
    threading.Thread(target=run_flask, daemon=True).start()
    executor.start_polling(dp, skip_updates=True)


